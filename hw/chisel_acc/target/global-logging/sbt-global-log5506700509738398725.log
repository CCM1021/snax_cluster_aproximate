[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\CARLOS~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\CARLOS~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 22.0.2)
[debug] Load.defaultLoad until apply took 107.6999ms
[debug]           Load.loadUnit: plugins took 84.5095ms
[debug]           Load.loadUnit: defsScala took 0.3851ms
[debug] [Loading] Scanning directory C:\TFG\snax_cluster_aproximate\hw\chisel_acc\project
[debug]             Load.loadUnit: mkEval took 7.6622ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\TFG\snax_cluster_aproximate\hw\chisel_acc\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.3704 ms
[info] loading settings for project chisel_acc-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(chisel_acc-build) took 50.7098ms
[debug]             Load.loadTransitive: finalizeProject(Project(id chisel_acc-build, base: C:\TFG\snax_cluster_aproximate\hw\chisel_acc\project, plugins: List(<none>))) took 75.9058ms
[debug] [Loading] Done in C:\TFG\snax_cluster_aproximate\hw\chisel_acc\project, returning: (chisel_acc-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4129.9479ms
[debug]           Load.loadUnit: cleanEvalClasses took 16.1577ms
[debug]         Load.loadUnit(file:/C:/TFG/snax_cluster_aproximate/hw/chisel_acc/project/, ...) took 4238.3946ms
[debug]       Load.apply: load took 4380.0252ms
[debug]       Load.apply: resolveProjects took 5.9932ms
[debug]       Load.apply: finalTransforms took 66.8618ms
[debug]       Load.apply: config.delegates took 6.282ms
[debug]       Load.apply: Def.make(settings)... took 425.8209ms
[debug]       Load.apply: structureIndex took 115.1457ms
[debug]       Load.apply: mkStreams took 2.2289ms
[info] loading project definition from C:\TFG\snax_cluster_aproximate\hw\chisel_acc\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7710.6398ms
[debug]     Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\TFG\snax_cluster_aproximate\hw\chisel_acc
[debug]       Load.loadUnit: mkEval took 0.417ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalafmt.sbt.ScalafmtPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalafmt.sbt.ScalafmtPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.scalafmt.sbt.ScalafmtPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.6959 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 49.9716ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\TFG\snax_cluster_aproximate\hw\chisel_acc, plugins: List(<none>))) took 59.6505ms
[debug] [Loading] Done in C:\TFG\snax_cluster_aproximate\hw\chisel_acc, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1924.2372ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.7831ms
[debug]   Load.loadUnit(file:/C:/TFG/snax_cluster_aproximate/hw/chisel_acc/, ...) took 9659.4717ms
[debug] Load.apply: load took 9685.4577ms
[debug] Load.apply: resolveProjects took 0.1987ms
[debug] Load.apply: finalTransforms took 50.8917ms
[debug] Load.apply: config.delegates took 1.2826ms
[debug] Load.apply: Def.make(settings)... took 188.6094ms
[debug] Load.apply: structureIndex took 34.0935ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to snax-accelerators (in build file:/C:/TFG/snax_cluster_aproximate/hw/chisel_acc/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50426 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50426, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to snax-accelerators (in build file:/C:/TFG/snax_cluster_aproximate/hw/chisel_acc/)
[debug] > Exec(idea-shell, None, None)
